##
# Django server settings
##
upstream ecommerce_happy_optimized {
    server localhost:8000;
}

server {
    listen 80 default_server;
    server_name dev.ecommerce_happy.com;
    
    client_max_body_size 100M;

    #include snippets/self-signed.conf;
    #include snippets/ssl-params.conf;

    charset utf-8;

    # routing all request which includes url media to /app/media/ so this traffic can be served by nginx
    location /static/ {
        alias /home/projects/ecommerce_happy/src/static_files/;
        add_header Cache-Control "public";
        expires 1y;
    }

    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: /";
    }

    # routing all request which includes url meda to /app/media/ so this traffic can be served by nginx
    location /upload/product/ {
        alias /home/projects/ecommerce_happy/src/upload/product/;
        add_header Cache-Control "public";
        expires 1y;
    }

    location / {
        # checks for static file, if not found proxy to app
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        # passing request to reverse proxy server
        proxy_pass http://ecommerce_happy_optimized;
    }
    
    #listen 443 ssl; # managed by Certbot
    #ssl_certificate /etc/letsencrypt/live/dev.ecommerce_happy.com/fullchain.pem; # managed by Certbot
    #ssl_certificate_key /etc/letsencrypt/live/dev.ecommerce_happy.com/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

# server {
#     if ($host = dev.ecommerce_happy.com) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot


#     listen 80;
#     server_name dev.ecommerce_happy.com;
#     return 404; # managed by Certbot
# }